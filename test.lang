def extern vararg printf(arg: *u8);

def print_int(x: u64) {
	n := x;
	i := u32(0);
	while (i < u32(8)) {
		printf("%02x", (n >> u32((u32(7) - i) * 8)) & u64(0xff));
		i = i + 1;
	}
	printf("\n");
}

// type S struct {
// 	a: i32,
// 	b: f64,
// };
// 
// type P struct {
// 	a: i32,
// 	b: i32,
// 	c: f64,
// 	d: f64,
// };
// 
// def func1(p1: i32, p2: i32, p3: i32, p4: i32, p5: i32, s1: P): S {
// 	printf("%f\n", s1.c);
// 	s: S;
// 	s.b = 123;
// 	return s;
// }

def export main() {
	// p: P;
	// p.c = 3;
	// p2 := func1(1, 2, 3, 4, 5, p);
	// printf("%f\n", p2.b);

	// b := u64(2);
	// c := &b;
	// a := u64(8) / b;
	// printf("%d\n", i32(a));

	print_int(0xFF00000000000000);
	print_int(0xffffffffffffffff);
}
